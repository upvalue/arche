# generate-literals.py - generate literal types for use in the program
# requires you to run yarn before use


def gen_classes(name, paths):
    classes = []

    for path in paths:
        with open(f"node_modules/{path}") as bsp:
            for line in bsp.readlines():
                line = line.strip()

                if line.startswith("."):
                    class_name = line.split("{")[0].strip(".").strip()
                    classes.append(class_name)

    classes = [f'"{cn}"' for cn in classes]

    print(f'export type {name} = {" | ".join(classes)};')


print("// types-generated.ts - Automatically generated types from basscss source code")
print("// Generated by generate-types.py")
print("")
gen_classes(
    "Padding",
    [
        "basscss-padding/index.css",
        "basscss-responsive-padding/lib/md-padding.css",
        "basscss-responsive-padding/lib/sm-padding.css",
        "basscss-responsive-padding/lib/lg-padding.css",
    ],
)
print(" ")
gen_classes(
    "Margin",
    [
        "basscss-margin/index.css",
        "basscss-responsive-margin/lib/md-margin.css",
        "basscss-responsive-margin/lib/sm-margin.css",
        "basscss-responsive-margin/lib/lg-margin.css",
    ],
)
